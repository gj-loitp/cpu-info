/*
 * Copyright 2017 KG Soft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.9"
    reportsDir = file("$buildDir/reports")
}

/**
 * The correct path of the report is $rootProjectDir/app/build/reports/jacoco/index.html
 * to run this task use: ./gradlew clean jacocoTestReport
 */
task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    group = "reports"
    description = "Generate unified Jacoco code coverage report"

    reports {
        html.enabled = true
        xml.enabled = false
        csv.enabled = false
    }

    def excludes = [
            '**/*Test*.*',
            '**/AutoValue_*.*',
            '**/*JavascriptBridge.class',
            '**/R.class',
            '**/R$*.class',
            '**/Manifest*.*',
            'android/**/*.*',
            '**/BuildConfig.*',
            '**/*$ViewBinder*.*',
            '**/*$ViewInjector*.*',
            '**/Lambda$*.class',
            '**/Lambda.class',
            '**/*Lambda.class',
            '**/*Lambda*.class',
            '**/*$InjectAdapter.class',
            '**/*$ModuleAdapter.class',
            '**/*$ViewInjector*.class',
            '**/*_MembersInjector.class', //Dagger2 generated code
            '*/*_MembersInjector*.*', //Dagger2 generated code
            '**/*_*Factory*.*', //Dagger2 generated code
            '*/*Component*.*', //Dagger2 generated code
            '**/*Module*.*', //Dagger2 generated code
            '**/com/roy93group/cpuinfo/di/**/*', // Dagger classes
            '**/com/roy93group/cpuinfo/databinding/**/*', // Android Data Binding
            '**/android/databinding/**/*', // Android Data Binding
            '**/com/bumptech/glide/**/*', // Glide
            '**/*Activity*.class',
            '**/*Fragment*.class',
            '**/*Adapter*.class',
    ]
    //we use "debug" build type for test coverage (can be other)
    def debugTree = fileTree(
            dir: "${buildDir}/intermediates/classes/debug",
            excludes: excludes
    ) + fileTree(
            dir: "${buildDir}/tmp/kotlin-classes/debug",
            excludes: excludes
    )

    sourceDirectories.from = files([
            android.sourceSets.main.java.srcDirs,
            "src/main/kotlin"
    ])
    classDirectories.from = files([debugTree])
    executionData.from = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}